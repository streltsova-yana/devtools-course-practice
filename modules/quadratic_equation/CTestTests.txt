#############################################
##### Testing
#############################################

set(prefix "${MODULE}")

add_test(
    NAME ${prefix}_can_Run
    COMMAND ${APPLICATION}
)
set_tests_properties (${prefix}_can_Run PROPERTIES
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Print_Help_Without_Arguments
    COMMAND ${APPLICATION}
)

set_tests_properties (${prefix}_can_Print_Help_Without_Arguments PROPERTIES
    PASS_REGULAR_EXPRESSION "This is a quadratic equations calculator"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Check_Number_Of_Arguments
    COMMAND ${APPLICATION} 1 2
)
set_tests_properties (${prefix}_can_Check_Number_Of_Arguments PROPERTIES
    PASS_REGULAR_EXPRESSION "Should be 3 arguments."
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Detect_Wrong_Number_Format
    COMMAND ${APPLICATION} 2 ppp -5
)
set_tests_properties (${prefix}_can_Detect_Wrong_Number_Format PROPERTIES
    PASS_REGULAR_EXPRESSION "Wrong number format!"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Detect_Not_Quadratic_Equation
    COMMAND ${APPLICATION} 0 2 -5
)
set_tests_properties (${prefix}_can_Detect_Not_Quadratic_Equation PROPERTIES
    PASS_REGULAR_EXPRESSION "Not quadratic equation."
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Detect_Negative_Discriminant
    COMMAND ${APPLICATION} 2 -5 6
)
set_tests_properties (${prefix}_can_Detect_Negative_Discriminant PROPERTIES
    PASS_REGULAR_EXPRESSION "No valid roots."
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Find_Roots
    COMMAND ${APPLICATION} 1 3 -4
)
set_tests_properties (${prefix}_can_Find_Roots PROPERTIES
    PASS_REGULAR_EXPRESSION "First root = 1, second root = -4."
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Find_Roots_When_Discriminant_Equals_0
    COMMAND ${APPLICATION} 1 -4 4
)
set_tests_properties (${prefix}_can_Find_Roots_When_Discriminant_Equals_0 PROPERTIES
    PASS_REGULAR_EXPRESSION "First root = 2, second root = 2."
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Find_Roots_When_a_Equals_1
    COMMAND ${APPLICATION} 1 -5 6
)
set_tests_properties (${prefix}_can_Find_Roots_When_a_Equals_1 PROPERTIES
    PASS_REGULAR_EXPRESSION "First root = 3, second root = 2."
    LABELS "${MODULE}")
    
add_test(
    NAME ${prefix}_can_Find_Roots_When_b_Equals_0
    COMMAND ${APPLICATION} 2 0 -18
)
set_tests_properties (${prefix}_can_Find_Roots_When_b_Equals_0 PROPERTIES
    PASS_REGULAR_EXPRESSION "First root = 3, second root = -3."
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Find_Roots_When_c_Equals_0
    COMMAND ${APPLICATION} 1 -3 0
)
set_tests_properties (${prefix}_can_Find_Roots_When_c_Equals_0 PROPERTIES
    PASS_REGULAR_EXPRESSION "First root = 3, second root = 0."
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Find_Roots_When_b_and_c_Equal_0
    COMMAND ${APPLICATION} 10 0 0
)
set_tests_properties (${prefix}_can_Find_Roots_When_b_and_c_Equal_0 PROPERTIES
    PASS_REGULAR_EXPRESSION "First root = 0, second root = 0."
    LABELS "${MODULE}")
