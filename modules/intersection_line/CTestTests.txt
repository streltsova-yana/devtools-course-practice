#############################################
##### Testing
#############################################

set(prefix "${MODULE}")

add_test(
    NAME ${prefix}_can_Run
    COMMAND ${APPLICATION}
)
set_tests_properties (${prefix}_can_Run PROPERTIES
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_find_Intersect
    COMMAND ${APPLICATION} 0 4 4 0 1 1 8 9
)
set_tests_properties (${prefix}_find_Intersect PROPERTIES
    PASS_REGULAR_EXPRESSION "Intersect!"
    LABELS "${MODULE}")
add_test(
    NAME ${prefix}_find_Intersect2
    COMMAND ${APPLICATION} 0 5 5 10 0 0 -4 9
)
set_tests_properties (${prefix}_find_Intersect2 PROPERTIES
    PASS_REGULAR_EXPRESSION "No Intersect!"
    LABELS "${MODULE}")
add_test(
    NAME ${prefix}_find_Intersect3
    COMMAND ${APPLICATION} 0 5 10 0 0 5 10 0
)
set_tests_properties (${prefix}_find_Intersect3 PROPERTIES
    PASS_REGULAR_EXPRESSION "Intersect!"
    LABELS "${MODULE}")
add_test(
    NAME ${prefix}_Check_Number_Of_Arguments
    COMMAND ${APPLICATION} 1 5 6
)
set_tests_properties (${prefix}_Check_Number_Of_Arguments PROPERTIES
    PASS_REGULAR_EXPRESSION "Should be 9 arguments."
    LABELS "${MODULE}")
add_test(
    NAME ${prefix}_Wrong_Number_Format
    COMMAND ${APPLICATION} 1 2 3 qqq 5 6 7 8
)
set_tests_properties (${prefix}_Wrong_Number_Format PROPERTIES
    PASS_REGULAR_EXPRESSION "Wrong number format!"
    LABELS "${MODULE}")
add_test(
    NAME ${prefix}_can_Print_Help_Without_Arguments
    COMMAND ${APPLICATION}
)
set_tests_properties (${prefix}_can_Print_Help_Without_Arguments PROPERTIES
    PASS_REGULAR_EXPRESSION "This is a check of the intersection of two line segments."
    LABELS "${MODULE}")

